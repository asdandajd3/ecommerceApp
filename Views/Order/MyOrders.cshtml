@model List<Order>
@{
    ViewData["Title"] = "Đơn hàng của tôi";
}

<div class="container mt-4">
    <h1 class="mb-4">Đơn hàng của tôi</h1>

    @if (Model != null && Model.Any())
    {
        @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
        {
            <div class="card mb-4">
                <div class="card-header">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-0">Đơn hàng #@order.Id</h5>
                            <small class="text-muted">Đặt ngày: @order.OrderDate.ToString("dd/MM/yyyy HH:mm")</small>
                        </div>
                        <div class="col-md-6 text-end">
                            <span class="badge @GetStatusBadgeClass(order.Status)">@GetStatusText(order.Status)</span>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <h6>Thông tin giao hàng:</h6>
                            <p><strong>Người nhận:</strong> @order.CustomerName</p>
                            <p><strong>Số điện thoại:</strong> @order.PhoneNumber</p>
                            <p><strong>Địa chỉ:</strong> @order.ShippingAddress</p>
                            @if (!string.IsNullOrEmpty(order.Email))
                            {
                                <p><strong>Email:</strong> @order.Email</p>
                            }
                            @if (!string.IsNullOrEmpty(order.Notes))
                            {
                                <p><strong>Ghi chú:</strong> @order.Notes</p>
                            }
                        </div>
                        <div class="col-md-4">
                            <h6>Chi tiết đơn hàng:</h6>
                            @if (order.OrderDetails != null && order.OrderDetails.Any())
                            {
                                @foreach (var detail in order.OrderDetails)
                                {
                                    <div class="d-flex justify-content-between mb-1">
                                        <span>@detail.Product.Name x @detail.Quantity</span>
                                        <span>@detail.Price.ToString("N0") VNĐ</span>
                                    </div>
                                }
                                <hr>
                                <div class="d-flex justify-content-between">
                                    <strong>Tổng cộng:</strong>
                                    <strong class="text-danger">@order.TotalAmount.ToString("N0") VNĐ</strong>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                <strong>Phương thức thanh toán:</strong> 
                                @(order.PaymentMethod == "cod" ? "Thanh toán khi nhận hàng" : "Chuyển khoản ngân hàng")
                            </small>
                        </div>
                        <div class="col-md-6 text-end">
                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-outline-primary btn-sm">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center">
            <div class="alert alert-info">
                <h4>Chưa có đơn hàng nào</h4>
                <p>Bạn chưa đặt đơn hàng nào.</p>
                <a asp-controller="Product" asp-action="List" class="btn btn-primary">Mua sắm ngay</a>
            </div>
        </div>
    }
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning",
            "confirmed" => "bg-info",
            "shipping" => "bg-primary",
            "delivered" => "bg-success",
            "cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "Chờ xác nhận",
            "confirmed" => "Đã xác nhận",
            "shipping" => "Đang giao",
            "delivered" => "Đã giao",
            "cancelled" => "Đã hủy",
            _ => "Không xác định"
        };
    }
} 