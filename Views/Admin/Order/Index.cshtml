@model List<Order>
@{
    ViewData["Title"] = "Quản lý đơn hàng - Admin";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">Quản lý đơn hàng</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách đơn hàng</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Mã đơn</th>
                            <th>Khách hàng</th>
                            <th>Số điện thoại</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Ngày đặt</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var order in Model.OrderByDescending(o => o.OrderDate))
                            {
                                <tr>
                                    <td>#@order.Id</td>
                                    <td>@order.CustomerName</td>
                                    <td>@order.PhoneNumber</td>
                                    <td>@order.TotalAmount.ToString("N0") VNĐ</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(order.Status)">
                                            @GetStatusText(order.Status)
                                        </span>
                                    </td>
                                    <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-info btn-sm">
                                                <i class="fas fa-eye"></i> Chi tiết
                                            </a>
                                            <button type="button" class="btn btn-primary btn-sm dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown">
                                                <span class="visually-hidden">Toggle Dropdown</span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'confirmed')">Xác nhận</a></li>
                                                <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'shipping')">Đang giao</a></li>
                                                <li><a class="dropdown-item" href="#" onclick="updateStatus(@order.Id, 'delivered')">Đã giao</a></li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item text-danger" href="#" onclick="updateStatus(@order.Id, 'cancelled')">Hủy đơn</a></li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">Không có đơn hàng nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
function updateStatus(orderId, status) {
    const statusText = {
        'confirmed': 'xác nhận',
        'shipping': 'đang giao',
        'delivered': 'đã giao',
        'cancelled': 'hủy'
    };
    
    if (confirm(`Bạn có chắc muốn ${statusText[status]} đơn hàng #${orderId}?`)) {
        fetch(`/AdminOrder/UpdateStatus`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                status: status
            })
        })
        .then(response => {
            if (response.ok) {
                location.reload();
            } else {
                alert('Có lỗi xảy ra khi cập nhật trạng thái.');
            }
        });
    }
}
</script>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning",
            "confirmed" => "bg-info",
            "shipping" => "bg-primary",
            "delivered" => "bg-success",
            "cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "Chờ xác nhận",
            "confirmed" => "Đã xác nhận",
            "shipping" => "Đang giao",
            "delivered" => "Đã giao",
            "cancelled" => "Đã hủy",
            _ => "Không xác định"
        };
    }
} 